<?xml version="1.0" encoding="UTF-8"?>
<web-app version="2.5" xmlns="http://java.sun.com/xml/ns/javaee"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee https://java.sun.com/xml/ns/javaee/web-app_2_5.xsd">
	<!-- 톰캣이 읽기 -->
	<!-- DispatchServlet: Controller 등록 -->
	<!-- 
			DispatcherServlet : Controller
			  => 구분 : Front Controller : 요청을 받는 역할
			사용자 정의 => ~ Controller (Model) : 요청에 대한 처리 역할
			화면 : JSP / HTML
			    		====
			    		 ThymeLeaf / React / NextJS
			1. Servlet은 구동 => 동작 (tomcat에 의해 동작)
									======= web.xml , server.xml
			   = 업체 => 분석해서 발표
			   
			   HandlerMapping
			   ===============
			   | Model 에서 @RequestMapping : GET+POST를 동시에 처리
			   			   @GetMapping : GET => SELECT
			   			   @PostMapping : POST => INSERT
			   			   @PutMapping : UPDATE
			   			   @DeleteMapping : DELETE
			  
	 -->
	<servlet>
		<servlet-name>dispatcher</servlet-name>
		<servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<init-param>
		  <param-name>contextConfigLocation</param-name>
		  <param-value>/WEB-INF/config/application-*.xml</param-value>
		  <!-- 
		  		public class DispatcherServlet extends HttpServlet
		  		{
		  			public void init(ServletConfig config)
		  			{
		  				1. web.xml에 등록된 데이터 읽기
		  				String xml=config.getInitParameter("contextConfiglocation");
		  				Application app=new ClassPathApplicationContext(xml);
		  				=> 등록된 클래스를 메모리 할당
		  			}
		  			public void service(HttpServletRequest request,HttpServletResponse response)
		  			{
		  				사용자 요청을 받아서 처리된 결과를 JSP로 전송
		  			}
		  			public void distroy(){
		  				servlet 메모리 해제 => 새로고침 , 화면 변경
		  			}
		  		}
		   -->
		</init-param>
	</servlet>
	<servlet-mapping>
		<servlet-name>dispatcher</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping>
	<!-- 한글 변환 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		<init-param>
			<param-name>forceEncoding</param-name>
			<param-value>true</param-value>
		</init-param>
	</filter>
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
</web-app>
